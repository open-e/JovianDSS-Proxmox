#!/usr/bin/python3

import argparse
import logging as log
import uuid

import yaml
import sys

from jovian_common import iscsi

import pool

 
def get_config():
    parser = argparse.ArgumentParser(description='JDSS simple CLI')

    parser.add_argument('-c', '--config', dest='config', required=True, help='Path of configuration file')
    parser.add_argument('-p', '--plain', dest='config', required=False, action='store_true', default=False, help='Path of configuration file')

    
    command = parser.add_subparsers(required=True, dest='command')

    ###########################################################################
    #  pool parser

    pool_parser = command.add_parser('pool')

    pool_parser.add_argument('pool_name', type=str, default='Pool-0', help='Pool name')

    pool_sub_object_parsers = pool_parser.add_subparsers(required=True, dest='pool_sub_object')
    pool_volume_parser = pool_sub_object_parsers.add_parser('volume')
    pool_volume_actions = pool_volume_parser.add_subparsers(required=True, dest='volume_sub_object')

    volume_create = pool_volume_actions.add_parser('create')
    volume_create.add_argument('-s', dest='volume_size', type=str, default='1G', help='New volume size in format <number><dimension>')
    volume_create.add_argument('-b', dest='block_size', type=str, default='64K', help='Block size')
    volume_create.add_argument('volume_name', nargs='?', type=str, help='New volume name')

    volume_list = pool_volume_actions.add_parser('list')

    volume_delete = pool_volume_actions.add_parser('delete')
    volume_delete.add_argument('-c', '--cascade', dest='cascade', 
                               action='store_true',
                               default=False,
                               help='Remove snapshots along side with volume')
    volume_delete.add_argument('volume_name', nargs=1, type=str, help='Name of volume to delete')

    ###########################################################################

    args = parser.parse_args()
    return args


def main():
    args = get_config()

    #cfgFile = open(args['config'])
    
    config = yaml.safe_load(open(args.config))
    
    # list available commands
    cmd = {'pool': pool.pool}
    
    jdss = iscsi.JovianISCSIDriver(config)
    jdss.do_setup('')

    args = vars(args)
    # Run command
    cmd[args.pop('command')](args, jdss)
    #cmd['pool'](args, jdss)

if __name__ == "__main__":
    try:
        main()
    except:
        sys.exit(1)
